#Docker version
docker version

#To connect to localhost
curl localhost :8800

# List of all container process
docker ps 

#Global view of docker environment
docker info

#Docker container command to create and run the container
docker container run --publish 80:80 --detach --name webhost nginx

#List of containers
docker container ls 

#To stop container
docker container stop <container id> 

#To start a container
docker container start <container id>

#Logs of container
docker container logs webhost

#Running process of container
docker container top webhost

#Removing container
docker container rm <name>
docker container rm -f <name>

#Docker mongo command
docker run --name mongo -d mongo

#Setting env variable
docker container run --publish 8080:80 --detach --name mysql  -e MYSQL_RANDOM_ROOT_PASSWORD=yes mysql

#Details of container config
docker container inspect

#Performance stats for all containers
docker container stats

#Start a new container interactively
docker container run -it 

#Run additional command in existing container
docker container exec -it

#Get IP address of container
docker inspect --format '{{.NetworkSettings.IPAddress}}' webhost

#Get port of the container
docker container port webhost

#create a new virtual Network
docker network create --driver

#Attach a network to container'
docker network connect

#Detach a network from container
docker network disconnect

#create example
docker network create my_app_net

#Creating network with run command
docker network run -d --name new_ngnix --network  my_app_net ngnix

#Connecting to a network
docker network connect my_app_name <container_name>

#Ping command
docker container exec -t my_nginx ping new_nginx

#Assign the container a network alias called search (acts like a hostname within the dude network)
docker container run -d --net dude --net-alias search elasticsearch:2

#Runs the nslookup command inside the container to look up the DNS address of the hostname search
docker container run --rm --net dude alpine nslookup search

Non-authoritative answer:
Name:   search
Address: 172.19.0.3
Name:   search
Address: 172.19.0.2

#Runs curl silently to send an HTTP request to http://search:9200
docker container run --rm --net dude centos curl -s search:9200

#This will instantly test the connection to your Elasticsearch container (aliased as search) on port 9200.
docker run --rm --net dude curlimages/curl search:9200


